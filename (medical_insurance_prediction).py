# -*- coding: utf-8 -*-
"""project 11(medical insurance prediction).ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1BAu2zVk5K7zm9kR43vA7Q5ABZ11a_pxT
"""


import numpy as np
import pandas as pd
import seaborn as sns
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import accuracy_score
from sklearn import metrics



insurence_dataset=pd.read_csv('C:\\Users\\jaibir\\Desktop\\python project\\medical_insurance\\insurance.csv')



insurence_dataset.head()

insurence_dataset.shape

insurence_dataset.info()

"""categorical features->sex,smoker,region"""

insurence_dataset.isnull().sum()

insurence_dataset.describe()

sns.set()
plt.figure(figsize=(6,6))
sns.distplot(insurence_dataset['age'])
plt.title('age distribution')
plt.show()

#gender
plt.figure(figsize=(6,6))
sns.countplot(x='sex',data=insurence_dataset)
plt.title('sex distribution')
plt.show()

#children
plt.figure(figsize=(6,6))
sns.countplot(x='children',data=insurence_dataset)
plt.title('children distribution')
plt.show()

insurence_dataset['sex'].value_counts()

insurence_dataset['children'].value_counts()

#smoker
plt.figure(figsize=(6,6))
sns.countplot(x='smoker',data=insurence_dataset)
plt.title('smoker distribution')
plt.show()

"""encodeing the categorical column

"""

#encoding the sex column
insurence_dataset.replace({'sex':{'male':0,'female':1}},inplace=True)

#encodeing the smoker column
insurence_dataset.replace({'smoker':{'yes':0,'no':1}},inplace=True)

#encodeing the region column
insurence_dataset.replace({'region':{'southeast':0,'southwest':1,'northeast':2,'northwest':3}},inplace=True)

insurence_dataset.head()

#spliting the dataset

X=insurence_dataset.drop(columns='charges',axis=1)
Y=insurence_dataset['charges']

X

Y

#spliting the data into train test

X_train,X_test,Y_train,Y_test=train_test_split(X,Y,test_size=0.2,random_state=2)

print(X.shape,X_train.shape,X_test.shape)

#model training

#LinearRegressor
regressor=LinearRegression()

regressor.fit(X_train,Y_train)

training_data_prediction=regressor.predict(X_train)

#R squared value
r2_train=metrics.r2_score(Y_train,training_data_prediction)

print('R squared vale:',r2_train)

# Building a predictive system with user input

print("\n--- Insurance Cost Prediction ---")

# Collect input from user
age = float(input("Enter age: "))
sex = input("Enter sex (male/female): ").strip().lower()
bmi = float(input("Enter BMI: "))
children = int(input("Enter number of children: "))
smoker = input("Do you smoke? (yes/no): ").strip().lower()
region = input("Enter region (southeast/southwest/northeast/northwest): ").strip().lower()

# Encode inputs manually like the dataset
sex = 0 if sex == 'male' else 1
smoker = 0 if smoker == 'yes' else 1
region_map = {'southeast': 0, 'southwest': 1, 'northeast': 2, 'northwest': 3}
region = region_map.get(region, -1)  # Default to -1 if region is invalid

# Check for invalid input
if region == -1:
    print("Invalid region entered.")
else:
    # Create NumPy array from input
    input_data = np.asarray([age, sex, bmi, children, smoker, region]).reshape(1, -1)

    # Predict insurance cost
    prediction = regressor.predict(input_data)
    print("\nâœ… Estimated Insurance Cost: USD", round(prediction[0], 2))
